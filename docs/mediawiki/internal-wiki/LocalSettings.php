<?php
# This file was automatically generated by the MediaWiki 1.39.0
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their defaults, but don't edit that file.
#
# Further documentation for configuration settings may be found at:
# https://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
    exit;
}

## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename = "GitHub Enterprise Wiki";
$wgMetaNamespace = "GitHub_Enterprise_Wiki";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
$wgScriptPath = "";

## The URL path to static resources (images, scripts, etc.)
$wgResourceBasePath = $wgScriptPath;

## The URL paths to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogos = [ '1x' => "$wgResourceBasePath/resources/assets/wiki.png" ];

## UPO means: this is also a user preference option

$wgEnableEmail = true;
$wgEnableUserEmail = true; # UPO

$wgEmergencyContact = "apache@ðŸŒ».invalid";
$wgPasswordSender = "apache@ðŸŒ».invalid";

$wgEnotifUserTalk = false; # UPO
$wgEnotifWatchlist = false; # UPO
$wgEmailAuthentication = true;

## Database settings
$wgDBtype = "mysql";
$wgDBserver = "database";
$wgDBname = "my_wiki";
$wgDBuser = "wikiuser";
$wgDBpassword = "example";

# MySQL specific settings
$wgDBprefix = "";

# MySQL table options to use during installation or update
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

# Shared database table
# This has no effect unless $wgSharedDB is also set.
$wgSharedTables[] = "actor";

## Shared memory settings
$wgMainCacheType = CACHE_ACCEL;
$wgMemCachedServers = [];

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads = true;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";

# InstantCommons allows wiki to use images from https://commons.wikimedia.org
$wgUseInstantCommons = false;

# Periodically send a pingback to https://www.mediawiki.org/ with basic data
# about this MediaWiki instance. The Wikimedia Foundation shares this data
# with MediaWiki developers to help guide future development efforts.
$wgPingback = false;

## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale
$wgShellLocale = "C.UTF-8";

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publicly accessible from the web.
#$wgCacheDirectory = "$IP/cache";

# Site language code, should be one of the list in ./languages/data/Names.php
$wgLanguageCode = "en-gb";

$wgSecretKey = "YOUR_SECRET_KEY_HERE";

# Changing this will log out all existing sessions.
$wgAuthenticationTokenVersion = "1";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = "YOUR_UPGRADE_KEY_HERE";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "";
$wgRightsText = "";
$wgRightsIcon = "";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

# The following permissions were set based on your choice in the installer
$wgGroupPermissions['*']['createaccount'] = false;
$wgGroupPermissions['*']['edit'] = false;

## Default skin: you can change the default skin. Use the internal symbolic
## names, ie 'vector', 'monobook':
$wgDefaultSkin = "vector";

# Enabled skins.
wfLoadSkin( 'Vector' );
wfLoadSkin( 'MonoBook' );
wfLoadSkin( 'Timeless' );

# Enabled extensions. Most of the extensions are enabled by adding
# wfLoadExtension( 'ExtensionName' );
# to LocalSettings.php. Check specific extension documentation for more details.
wfLoadExtension( 'CategoryTree' );
wfLoadExtension( 'Cite' );
wfLoadExtension( 'CiteThisPage' );
wfLoadExtension( 'CodeEditor' );
wfLoadExtension( 'ConfirmEdit' );
wfLoadExtension( 'Gadgets' );
wfLoadExtension( 'ImageMap' );
wfLoadExtension( 'InputBox' );
wfLoadExtension( 'Interwiki' );
wfLoadExtension( 'Math' );
wfLoadExtension( 'MultimediaViewer' );
wfLoadExtension( 'Nuke' );
wfLoadExtension( 'OATHAuth' );
wfLoadExtension( 'PageImages' );
wfLoadExtension( 'ParserFunctions' );
wfLoadExtension( 'PdfHandler' );
wfLoadExtension( 'Poem' );
wfLoadExtension( 'Renameuser' );
wfLoadExtension( 'ReplaceText' );
wfLoadExtension( 'Scribunto' );
wfLoadExtension( 'SecureLinkFixer' );
wfLoadExtension( 'SpamBlacklist' );
wfLoadExtension( 'SyntaxHighlight_GeSHi' );
wfLoadExtension( 'TemplateData' );
wfLoadExtension( 'TextExtracts' );
wfLoadExtension( 'TitleBlacklist' );
wfLoadExtension( 'VisualEditor' );
wfLoadExtension( 'WikiEditor' );

# Load Lockdown extension for namespace permissions
require_once "$IP/extensions/Lockdown/Lockdown.php";

# End of automatically generated settings.
# Add more configuration options below.

#############################################
# CUSTOM NAMESPACE CONFIGURATION
#############################################

# Define custom namespace for Admin content
define("NS_ADMIN", 3000);
define("NS_ADMIN_TALK", 3001);

$wgExtraNamespaces[NS_ADMIN] = "Admin";
$wgExtraNamespaces[NS_ADMIN_TALK] = "Admin_talk";

# Add namespaces to search
$wgNamespacesToBeSearchedDefault[NS_ADMIN] = true;

# Namespace permissions using Lockdown extension
$wgNamespacePermissionLockdown[NS_ADMIN]['*'] = ['admin'];
$wgNamespacePermissionLockdown[NS_ADMIN_TALK]['*'] = ['admin'];

# Prevent non-admins from reading admin namespace
$wgNamespacePermissionLockdown[NS_ADMIN]['read'] = ['admin'];
$wgNamespacePermissionLockdown[NS_ADMIN_TALK]['read'] = ['admin'];

#############################################
# USER GROUP CONFIGURATION
#############################################

# Define admin group permissions
$wgGroupPermissions['admin'] = $wgGroupPermissions['sysop'];
$wgGroupPermissions['admin']['viewadminpages'] = true;

# Regular users permissions
$wgGroupPermissions['user']['read'] = true;
$wgGroupPermissions['user']['edit'] = true;
$wgGroupPermissions['user']['createpage'] = true;
$wgGroupPermissions['user']['createtalk'] = true;
$wgGroupPermissions['user']['writeapi'] = true;
$wgGroupPermissions['user']['upload'] = true;
$wgGroupPermissions['user']['reupload'] = true;

# Restrict anonymous users
$wgGroupPermissions['*']['read'] = false;
$wgGroupPermissions['*']['edit'] = false;
$wgGroupPermissions['*']['createpage'] = false;
$wgGroupPermissions['*']['createtalk'] = false;

# Allow reading of specific pages for anonymous users
$wgWhitelistRead = array(
    "Main Page",
    "MediaWiki:Common.css",
    "MediaWiki:Common.js",
    "Special:UserLogin",
    "Special:CreateAccount",
    "Special:PasswordReset"
);

#############################################
# VISUAL EDITOR CONFIGURATION
#############################################

$wgDefaultUserOptions['visualeditor-enable'] = 1;
$wgDefaultUserOptions['visualeditor-enable-experimental'] = 1;

# VisualEditor API URL
$wgVirtualRestConfig['modules']['parsoid'] = array(
    'url' => 'http://localhost:8142',
    'domain' => 'localhost',
    'prefix' => 'localhost'
);

#############################################
# SYNTAX HIGHLIGHTING CONFIGURATION
#############################################

# Enable line numbers by default
$wgSyntaxHighlightModels['yaml'] = 'yaml';
$wgSyntaxHighlightModels['dockerfile'] = 'docker';
$wgSyntaxHighlightModels['json'] = 'javascript';

#############################################
# FILE UPLOAD CONFIGURATION
#############################################

$wgFileExtensions = array(
    'png', 'gif', 'jpg', 'jpeg', 'svg',
    'pdf', 'txt', 'md', 'yaml', 'yml',
    'json', 'xml', 'zip', 'tar', 'gz'
);

$wgAllowExternalImages = true;
$wgAllowExternalImagesFrom = array(
    'https://github.com/',
    'https://raw.githubusercontent.com/',
    'https://docs.github.com/'
);

#############################################
# SEARCH CONFIGURATION
#############################################

$wgSearchType = 'CirrusSearch';
$wgCirrusSearchServers = [ 'elasticsearch' ];

#############################################
# PERFORMANCE CONFIGURATION
#############################################

$wgJobRunRate = 0;
$wgRunJobsAsync = true;

# Cache configuration
$wgMainCacheType = CACHE_MEMCACHED;
$wgParserCacheType = CACHE_MEMCACHED;
$wgMessageCacheType = CACHE_MEMCACHED;
$wgMemCachedServers = array( "memcached:11211" );

$wgSessionsInObjectCache = true;
$wgSessionCacheType = CACHE_MEMCACHED;

#############################################
# UI CUSTOMISATION
#############################################

# Set default timezone to UK
$wgLocaltimezone = "Europe/London";
date_default_timezone_set( $wgLocaltimezone );

# Date format preference
$wgDefaultUserOptions['date'] = 'dmy';

# Show section edit links for users
$wgDefaultUserOptions['editsection'] = 1;

# Enable watchlist by default
$wgDefaultUserOptions['watchdefault'] = 1;
$wgDefaultUserOptions['watchcreations'] = 1;

#############################################
# SECURITY CONFIGURATION
#############################################

# Password policies
$wgPasswordPolicy['policies']['default']['MinimalPasswordLength'] = 10;
$wgPasswordPolicy['policies']['default']['PasswordCannotMatchUsername'] = true;
$wgPasswordPolicy['policies']['default']['PasswordCannotBePopular'] = true;

# Rate limiting
$wgRateLimits['edit']['user'] = [ 8, 60 ];
$wgRateLimits['move']['user'] = [ 2, 60 ];
$wgRateLimits['upload']['user'] = [ 10, 300 ];

# CORS configuration for API access
$wgCrossSiteAJAXdomains = array(
    '*.github.com',
    'localhost:*'
);

#############################################
# DEBUG CONFIGURATION (DISABLE IN PRODUCTION)
#############################################

# $wgShowExceptionDetails = true;
# $wgShowDBErrorBacktrace = true;
# $wgDebugToolbar = true;